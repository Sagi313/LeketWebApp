[{"C:\\Sagi\\Programming\\Coda- For the wild animals\\wild-life\\app\\src\\index.js":"1","C:\\Sagi\\Programming\\Coda- For the wild animals\\wild-life\\app\\src\\components\\App.js":"2","C:\\Sagi\\Programming\\Coda- For the wild animals\\wild-life\\app\\src\\components\\Dashboard.js":"3","C:\\Sagi\\Programming\\Coda- For the wild animals\\wild-life\\app\\src\\components\\Signup.js":"4","C:\\Sagi\\Programming\\Coda- For the wild animals\\wild-life\\app\\src\\components\\ForgotPassword.js":"5","C:\\Sagi\\Programming\\Coda- For the wild animals\\wild-life\\app\\src\\components\\Login.js":"6","C:\\Sagi\\Programming\\Coda- For the wild animals\\wild-life\\app\\src\\components\\UpdateProfile.js":"7","C:\\Sagi\\Programming\\Coda- For the wild animals\\wild-life\\app\\src\\components\\LogoBar.js":"8","C:\\Sagi\\Programming\\Coda- For the wild animals\\wild-life\\app\\src\\components\\PrivateRoute.js":"9","C:\\Sagi\\Programming\\Coda- For the wild animals\\wild-life\\app\\src\\components\\NaviBar.js":"10","C:\\Sagi\\Programming\\Coda- For the wild animals\\wild-life\\app\\src\\contexts\\AuthContext.js":"11","C:\\Sagi\\Programming\\Coda- For the wild animals\\wild-life\\app\\src\\firebase.js":"12"},{"size":208,"mtime":1609796424964,"results":"13","hashOfConfig":"14"},{"size":1101,"mtime":1613573990580,"results":"15","hashOfConfig":"14"},{"size":1729,"mtime":1613590352482,"results":"16","hashOfConfig":"14"},{"size":5172,"mtime":1613589283955,"results":"17","hashOfConfig":"14"},{"size":1559,"mtime":1610491171293,"results":"18","hashOfConfig":"14"},{"size":2876,"mtime":1613589221156,"results":"19","hashOfConfig":"14"},{"size":4169,"mtime":1611187649316,"results":"20","hashOfConfig":"14"},{"size":267,"mtime":1613572161992,"results":"21","hashOfConfig":"14"},{"size":412,"mtime":1601325755000,"results":"22","hashOfConfig":"14"},{"size":175,"mtime":1613574114477,"results":"23","hashOfConfig":"14"},{"size":1280,"mtime":1601325755000,"results":"24","hashOfConfig":"14"},{"size":523,"mtime":1610839584785,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"b6jtfb",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Sagi\\Programming\\Coda- For the wild animals\\wild-life\\app\\src\\index.js",[],["56","57"],"C:\\Sagi\\Programming\\Coda- For the wild animals\\wild-life\\app\\src\\components\\App.js",[],"C:\\Sagi\\Programming\\Coda- For the wild animals\\wild-life\\app\\src\\components\\Dashboard.js",["58"],"import React, { useState } from \"react\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport { Link, useHistory } from \"react-router-dom\";\n\nimport firebase from \"firebase/app\";\nimport \"firebase/database\";\n\nexport default function Dashboard() {\n  const [error, setError] = useState(\"\");\n  const { currentUser, logout } = useAuth();\n  const history = useHistory();\n  var user = firebase.auth().currentUser;\n  const profilePicture = \"photos/profile pic.png\";\n\n  async function handleLogout() {\n    setError(\"\");\n\n    try {\n      await logout();\n      history.push(\"/login\");\n    } catch {\n      setError(\"Failed to log out\");\n    }\n  }\n\n  function handleDelete() {\n    // Need to implament a reauthentication here. This func wont delete a user who is signed in for too long\n    user.delete();\n  }\n\n  return (\n    <div>\n      <div>\n        {error && <p variant=\"danger\">{error}</p>}\n        <img src={profilePicture} alt=\"your profile picture\" />\n        <h2>פרופיל</h2>\n        <p>{user.displayName}</p>\n        <p>{currentUser.email}</p>\n        <p>050-1234567</p>\n        <p>01/01/2020</p>\n      </div>\n      <div>\n        <button variant=\"link\" onClick={handleLogout}>\n          התנתק\n        </button>\n      </div>\n      <div>\n        <Link to=\"/update-profile\">\n          <button className=\"empty-btn\" type=\"button\">\n            עריכת פרופיל\n          </button>\n        </Link>\n      </div>\n      <div>\n        <button className=\"empty-btn\" type=\"button\" onClick={handleDelete}>\n          מחיקת פרופיל\n        </button>\n      </div>\n      <div>\n        <button className=\"volunteer-btn\" type=\"button\">\n          דף קשר מתנדבים\n        </button>\n      </div>\n    </div>\n  );\n}\n","C:\\Sagi\\Programming\\Coda- For the wild animals\\wild-life\\app\\src\\components\\Signup.js",["59","60"],"import React, { useImperativeHandle, useRef, useState } from \"react\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport firebase from \"firebase/app\";\nimport \"firebase/database\";\n\nexport default function Signup() {\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const passwordConfirmRef = useRef();\n  const phoneNumberRef = useRef();\n  const movingAnimalsBoxRef = useRef();\n  const birthDateRef = useRef();\n  const fullNameRef = useRef();\n  const { signup } = useAuth();\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [profileImg] = useState(\"photos/profile pic.png\");\n  const history = useHistory();\n\n  async function addtoDB(user) {\n    // This adds the additional data of the user to the realtime DB in the firebase app\n    if (user !== null) {\n      //Need to resolve this. for some reason the user == null\n      var token = user.uid;\n      console.log(token);\n      firebase\n        .database()\n        .ref(\"/user/\" + token)\n        .set({\n          birthdate: birthDateRef.current.value,\n          phone: phoneNumberRef.current.value,\n          movinganimals: movingAnimalsBoxRef.current.value,\n        });\n    } else {\n      console.log(\"Bug\");\n    }\n  }\n\n  function imageHandler(e) {\n    const reader = new FileReader();\n    reader.onload = () => {\n      if (reader.readyState === 2) {\n        this.setState({ profileImg: reader.result });\n      }\n    };\n    reader.readAsDataURL(e.target.files[0]);\n  }\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) {\n      return setError(\"Passwords do not match\");\n    }\n\n    try {\n      setError(\"\");\n      setLoading(true);\n      await signup(emailRef.current.value, passwordRef.current.value);\n      history.push(\"/\");\n    } catch {\n      setError(\"Failed to create an account\");\n    }\n    var user = firebase.auth().currentUser;\n\n    addtoDB(user);\n    setLoading(false);\n  }\n\n  return (\n    <div>\n      <div className=\"container\">\n        <div className=\"img-holder\">\n          <img src={profileImg} />\n        </div>\n        <label className=\"custom-file-upload\">\n          <input\n            className=\"change-profile-img\"\n            type=\"file\"\n            accept=\"image/*\"\n            name=\"image-upload\"\n            onChange={imageHandler}\n          />\n        </label>\n      </div>\n\n      <div>\n        <h2>העמותה למען חיות הבר</h2>\n\n        <h2>הרשמה</h2>\n        {error && <p variant=\"danger\">{error}</p>}\n        <form onSubmit={handleSubmit}>\n          <div className=\"register-field\">\n            <input\n              className=\"signup-input\"\n              type=\"text\"\n              ref={fullNameRef}\n              required\n            />\n            <p className=\"Signup-info-text\">שם ושם משפחה</p>\n          </div>\n          <div className=\"register-field\">\n            <input\n              className=\"signup-input\"\n              type=\"email\"\n              ref={emailRef}\n              required\n            />\n            <p className=\"Signup-info-text\">אימייל</p>\n          </div>\n          <div className=\"register-field\">\n            <input\n              className=\"signup-input\"\n              type=\"text\"\n              ref={phoneNumberRef}\n              required\n            />\n            <p className=\"Signup-info-text\">טלפון</p>\n          </div>\n          <div className=\"register-field\">\n            <input\n              className=\"signup-input\"\n              type=\"date\"\n              ref={birthDateRef}\n              required\n            />\n            <p className=\"Signup-info-text\">תאריך לידה</p>\n          </div>\n          <div className=\"register-field\">\n            <input\n              className=\"signup-input\"\n              type=\"password\"\n              ref={passwordRef}\n              required\n            />\n            <p className=\"Signup-info-text\">סיסמא</p>\n          </div>\n          <div className=\"register-field\">\n            <input\n              className=\"signup-input\"\n              type=\"password\"\n              ref={passwordConfirmRef}\n              required\n            />\n            <p className=\"Signup-info-text\">אימות סיסמא</p>\n          </div>\n          <div>\n            <input\n              className=\"check-box\"\n              type=\"checkbox\"\n              ref={movingAnimalsBoxRef}\n            ></input>\n            <p className=\"check-box-text\">אני מעוניין/ת להתנדב לשינוע חיות</p>\n          </div>\n          <div>\n            <p className=\"check-box-text\">תנאי ההסכמה </p>\n            <p className=\"check-box-text\"> בלחיצה על ההרשמה אני מאשר/ת את</p>\n          </div>\n          <button disabled={loading} type=\"submit\">\n            הרשמה\n          </button>\n        </form>\n      </div>\n      <div>\n        יש לך חשבון? <Link to=\"/login\">התחברות</Link>\n      </div>\n      <div className=\"test\">\n        <button onClick={addtoDB}>Add extra data- to be removed</button>\n      </div>\n    </div>\n  );\n}\n","C:\\Sagi\\Programming\\Coda- For the wild animals\\wild-life\\app\\src\\components\\ForgotPassword.js",[],"C:\\Sagi\\Programming\\Coda- For the wild animals\\wild-life\\app\\src\\components\\Login.js",["61","62","63","64","65","66"],"import React, { useRef, useState } from \"react\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\n\nexport default function Login() {\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const { login } = useAuth();\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const history = useHistory();\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n\n    try {\n      setError(\"\");\n      setLoading(true);\n      await login(emailRef.current.value, passwordRef.current.value);\n      history.push(\"/\");\n    } catch {\n      setError(\"Failed to log in\");\n    }\n\n    setLoading(false);\n  }\n\n  async function googleLogIn() {\n    var provider = new firebase.auth.GoogleAuthProvider();\n    firebase\n      .auth()\n      .signInWithPopup(provider)\n      .then((result) => {\n        /** @type {firebase.auth.OAuthCredential} */\n        var credential = result.credential;\n        // This gives you a Google Access Token. You can use it to access the Google API.\n        var token = credential.accessToken;\n        // The signed-in user info.\n        var user = result.user;\n        // ...\n      })\n      .catch((error) => {\n        // Handle Errors here.\n        var errorCode = error.code;\n        var errorMessage = error.message;\n        // The email of the user's account used.\n        var email = error.email;\n        // The firebase.auth.AuthCredential type that was used.\n        var credential = error.credential;\n      });\n  }\n\n  return (\n    <div>\n      <div>\n        <h2>העמותה למען חיות הבר</h2>\n        <h2>התחברות</h2>\n        {error && <p variant=\"danger\">{error}</p>}\n        <form onSubmit={handleSubmit}>\n          <div id=\"email\">\n            <input type=\"email\" placeholder=\"אימייל\" ref={emailRef} required />\n          </div>\n          <div id=\"password\">\n            <input\n              type=\"password\"\n              placeholder=\"סיסמא\"\n              ref={passwordRef}\n              required\n            />\n          </div>\n          <div>\n            <Link to=\"/forgot-password\">שכחתי סיסמא</Link>\n          </div>\n          <button className=\"login-button\" disabled={loading} type=\"submit\">\n            כניסה\n          </button>\n        </form>\n      </div>\n      <div className=\"login-screen-text\">\n        עוד לא נרשמת? הרשם\n        <Link to=\"/signup\">\n          {\" \"}\n          <p id=\"here-word-box\">כאן</p>{\" \"}\n        </Link>\n      </div>\n      <div>\n        <button id=\"goole-login-button\" type=\"button\" onClick={googleLogIn}>\n          <img src=\"photos\\Google-Button.png\" alt=\"google login img\" />\n          <p id=\"google-login-text\"> התחבר עם גוגל </p>\n        </button>\n      </div>\n    </div>\n  );\n}\n","C:\\Sagi\\Programming\\Coda- For the wild animals\\wild-life\\app\\src\\components\\UpdateProfile.js",[],"C:\\Sagi\\Programming\\Coda- For the wild animals\\wild-life\\app\\src\\components\\LogoBar.js",["67"],"import React, { Component } from \"react\";\r\n\r\nclass LogoBar extends React.Component {\r\n  render() {\r\n    return (\r\n      <div class=\"logo-bar\">\r\n        <img src=\"photos\\Logo.png\" alt=\"for-the-wild-life-logo\" />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default LogoBar;\r\n","C:\\Sagi\\Programming\\Coda- For the wild animals\\wild-life\\app\\src\\components\\PrivateRoute.js",[],"C:\\Sagi\\Programming\\Coda- For the wild animals\\wild-life\\app\\src\\components\\NaviBar.js",["68"],"import React, { Component } from \"react\";\r\n\r\nclass NaviBar extends React.Component {\r\n  render() {\r\n    return <div class=\"navi-bar\"></div>;\r\n  }\r\n}\r\nexport default NaviBar;\r\n","C:\\Sagi\\Programming\\Coda- For the wild animals\\wild-life\\app\\src\\contexts\\AuthContext.js",[],"C:\\Sagi\\Programming\\Coda- For the wild animals\\wild-life\\app\\src\\firebase.js",[],{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","severity":1,"message":"74","line":35,"column":9,"nodeType":"75","endLine":35,"endColumn":64},{"ruleId":"76","severity":1,"message":"77","line":1,"column":17,"nodeType":"78","messageId":"79","endLine":1,"endColumn":36},{"ruleId":"80","severity":1,"message":"81","line":75,"column":11,"nodeType":"75","endLine":75,"endColumn":35},{"ruleId":"76","severity":1,"message":"82","line":39,"column":13,"nodeType":"78","messageId":"79","endLine":39,"endColumn":18},{"ruleId":"76","severity":1,"message":"83","line":41,"column":13,"nodeType":"78","messageId":"79","endLine":41,"endColumn":17},{"ruleId":"76","severity":1,"message":"84","line":46,"column":13,"nodeType":"78","messageId":"79","endLine":46,"endColumn":22},{"ruleId":"76","severity":1,"message":"85","line":47,"column":13,"nodeType":"78","messageId":"79","endLine":47,"endColumn":25},{"ruleId":"76","severity":1,"message":"86","line":49,"column":13,"nodeType":"78","messageId":"79","endLine":49,"endColumn":18},{"ruleId":"76","severity":1,"message":"87","line":51,"column":13,"nodeType":"78","messageId":"79","endLine":51,"endColumn":23},{"ruleId":"76","severity":1,"message":"88","line":1,"column":17,"nodeType":"78","messageId":"79","endLine":1,"endColumn":26},{"ruleId":"76","severity":1,"message":"88","line":1,"column":17,"nodeType":"78","messageId":"79","endLine":1,"endColumn":26},"no-native-reassign",["89"],"no-negated-in-lhs",["90"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-unused-vars","'useImperativeHandle' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'token' is assigned a value but never used.","'user' is assigned a value but never used.","'errorCode' is assigned a value but never used.","'errorMessage' is assigned a value but never used.","'email' is assigned a value but never used.","'credential' is assigned a value but never used.","'Component' is defined but never used.","no-global-assign","no-unsafe-negation"]